import{_ as p}from"./ValaxyMain.vue_vue_type_style_index_0_lang-9HTySS_m.js";import{a as d,p as r,o as g,c,w as a,f as E,q as u,r as n,i,j as s}from"./app-DEw9raa7.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-CYufLakv.js";import"./YunCard.vue_vue_type_script_setup_true_lang-BabP9Q9Y.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-B8z3l9zt.js";import"./index-C7yU5XnD.js";const y="/images/ZhanShuangPBRMixer/GamePreview.png",m="/images/ZhanShuangPBRMixer/UnityPBRPreview.png",D="/images/ZhanShuangPBRMixer/URP_PRRCODE.png",f="/images/ZhanShuangPBRMixer/InputData.png",B="/images/ZhanShuangPBRMixer/StartInputData.png",F="/images/ZhanShuangPBRMixer/InputDataCode.png",_="/images/ZhanShuangPBRMixer/SurfaceInputCode.png",R=i("h5",{id:"unity-关于-战双帕弥什-中的pbr混合",tabindex:"-1"},[i("b",null,"Unity 关于“战双帕弥什”中的PBR混合"),s(),i("a",{class:"header-anchor",href:"#unity-关于-战双帕弥什-中的pbr混合","aria-label":'Permalink to "<b>Unity 关于“战双帕弥什”中的PBR混合</b>"'},"​")],-1),P=i("hr",null,null,-1),C=i("p",null,"最近由于工作原因接触到了渲染这方面的东西，效果中需要实现到“战双帕弥什”中的卡通渲染混合了PBR这样类似的效果。故也忙里偷闲，写了这篇文章。",-1),b=i("figure",null,[i("img",{src:y,alt:"",loading:"lazy",decoding:"async"})],-1),v=i("p",null,"其实可以从这张图上看出来，人物武器上的金属和身上的金属有很明显的PBR效果。而且不只是金属PBR也体现在了人物服装的漫反射上，基本可以说是 在服装上高光，漫反射，和金属度都是PBR的渲染。",-1),S=i("hr",null,null,-1),U=i("p",null,"再来看一下Unity URP内部提供的PBR Lit材质。",-1),A=i("figure",null,[i("img",{src:m,alt:"",loading:"lazy",decoding:"async"})],-1),I=i("p",null,[s("这是一个默认状态下的URP PBR 效果，其核心函数为"),i("code",null,"UniversalFragmentPBR()"),s(" 包含在Lighting.hlsl的文件中，具体内容如下")],-1),L=i("figure",null,[i("img",{src:D,alt:"",loading:"lazy",decoding:"async"})],-1),M=i("p",null,"它接受的数据主要就是InputData这个结构体，还有关于PBR的一段参数，就能用这个函数直接计算出PBR的表面。 那么InputData中到底给了 函数哪些内容呢。这个内容被包含在了Input.hlsl文件中，如下。",-1),$=i("figure",null,[i("img",{src:f,alt:"",loading:"lazy",decoding:"async"})],-1),z=i("p",null,[s("这样就知道了我们需要为"),i("code",null,"UniversalFragmentPBR()"),s("函数输入准备哪些东西了")],-1),W=i("figure",null,[i("img",{src:B,alt:"",loading:"lazy",decoding:"async"})],-1),w=i("p",null,"我们先准备一个函数，让这个函数返回这个结构体，并初始花结构体里的值都为0。我们可以直接在这个函数里计算InputData结构中所拥有的所有内容",-1),Z=i("figure",null,[i("img",{src:F,alt:"",loading:"lazy",decoding:"async"})],-1),x=i("p",null,"这就是InputData中的全部参数，当然这一部分也可以直接在顶点着色器上完成，后续直接传入这个结构中即可。有了这个之后其实就可以直接开始使用了 后面只需要将对应的参数传入后面即可。这边另外做了一个surfaceData来存放其他数据",-1),G=i("figure",null,[i("img",{src:_,alt:"",loading:"lazy",decoding:"async"})],-1),N=i("p",null,[s("接下来我们就可以在片元着色器中开始调用"),i("code",null,"UniversalFragmentPBR()"),s("函数了。")],-1),O=i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"float4 PBRcolor "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," UniversalFragmentPBR"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(inputData, surfaceData.albedo, surfaceData.metallic, surfaceData.specular, surfaceData.smoothness, surfaceData.occlusion, surfaceData.emission, surfaceData.alpha);")])])]),i("button",{class:"collapse"})],-1),V=i("blockquote",null,[i("p",null,"这个函数输出其实就是输出的最后的PBR着色。")],-1),j=i("p",null,[s("但是因为我们需要做的是混合PBR中的高光，和金属度部分，有的时候也需要单独的漫反射通道。所以我们并不能直接使用"),i("code",null,"UniversalFragmentPBR()"),s("函数。 所以这个时候就需要回头去看看函数中的源码。可以看到这样一段内容。")],-1),q=i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"half3 color "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," GlobalIllumination"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(brdfData, inputData.bakedGI, occlusion, inputData.normalWS, inputData.viewDirectionWS);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"color "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LightingPhysicallyBased"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(brdfData, mainLight, inputData.normalWS, inputData.viewDirectionWS);")])])]),i("button",{class:"collapse"})],-1),T=i("p",null,"这两个函数一个计算了在PBR着色计算中的mesh颜色信息，mesh表面的光照信息。所以只要我们把它区分开，就能实现PBR的混合了。 故如下",-1),J=i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//InitializeBRDFData(albedo, metallic, specular, smoothness, alpha, brdfData);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"BRDFData brdfData;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"InitializeBRDFData"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"float3"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"), surfaceData.metallic, surfaceData.specular, "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", surfaceData.alpha, brdfData);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"float3 PBRLightDiffuse "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LightingPhysicallyBased"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(brdfData, light, inputData.normalWS, inputData.viewDirectionWS);"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//PBR Lighting")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"BRDFData brdfData2;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"InitializeBRDFData"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"float3"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"), "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", surfaceData.specular, surfaceData.smoothness, surfaceData.alpha, brdfData2);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"float3 PBRLightSpec "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LightingPhysicallyBased"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(brdfData2, light, inputData.normalWS, inputData.viewDirectionWS);"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//PBR Lighting")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"BRDFData brdfData3;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"InitializeBRDFData"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(surfaceData.albedo, "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", surfaceData.specular, surfaceData.smoothness, surfaceData.alpha, brdfData3);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"float3 PBRmetallic "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LightingPhysicallyBased"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(brdfData3, light, inputData.normalWS, inputData.viewDirectionWS);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"float3 MetalicBase "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," GlobalIllumination"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(brdfData3, inputData.bakedGI, surfaceData.occlusion, inputData.normalWS, inputData.viewDirectionWS);"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//MetalBaseCOlor")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"smoothnessMask "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," step"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"0.1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",smoothnessMask);")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"float3 PBRDiffuse "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," smoothstep"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",_PbrDiffuseSmooth,PBRLightDiffuse.r);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"PBRDiffuse "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," lerp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"( DarkSide,BrightSide,PBRDiffuse).xyz;")])])]),i("button",{class:"collapse"})],-1),H=i("p",null,[s("首先，要使用"),i("code",null,"LightingPhysicallyBased()"),s("函数需要有一个BRDFData类型的结构输入，先跟着Lighting.hlsl中的内容把BRDFData中的数据储存好。 另外，我们需要分离高光和漫反射，为了做到唯一变量，先把颜色变量变为白色输入BRDFData中，这样我们"),i("code",null,"LightingPhysicallyBased()"),s("得出的结果就能用于最后的混合。 同理，高光和金属度也一样。 最后将结果lerp一下漫反射即可获得我们需要混合的三个通道，然后用这些通道进行卡通渲染上的叠加就可以了。")],-1),li={__name:"ZhanShuangRendringPBRMixer",setup(K,{expose:k}){const l=JSON.parse('{"title":"Unity仿站双渲染—_PBR混合","description":"","frontmatter":{"title":"Unity仿站双渲染—_PBR混合","date":"2022-8-28","tags":["Unity","Shader","Rendering"],"categories":["Games"]},"headers":[],"relativePath":"pages/posts/Unity/UnityShader/ZhanShuangRendringPBRMixer.md","path":"/home/runner/work/AfterDuang.github.io/AfterDuang.github.io/pages/posts/Unity/UnityShader/ZhanShuangRendringPBRMixer.md","lastUpdated":1713964229000}'),h=d(),e=l.frontmatter||{};return h.meta.frontmatter=Object.assign(h.meta.frontmatter||{},l.frontmatter||{}),r("pageData",l),r("valaxy:frontmatter",e),globalThis.$frontmatter=e,k({frontmatter:{title:"Unity仿站双渲染—_PBR混合",date:"2022-8-28",tags:["Unity","Shader","Rendering"],categories:["Games"]}}),(t,X)=>{const o=p;return g(),c(o,{frontmatter:E(e)},{"main-content-md":a(()=>[R,P,C,b,v,u(" more "),S,U,A,I,L,M,$,z,W,w,Z,x,G,N,O,V,j,q,T,J,H]),"main-header":a(()=>[n(t.$slots,"main-header")]),"main-header-after":a(()=>[n(t.$slots,"main-header-after")]),"main-nav":a(()=>[n(t.$slots,"main-nav")]),"main-content":a(()=>[n(t.$slots,"main-content")]),"main-content-after":a(()=>[n(t.$slots,"main-content-after")]),"main-nav-before":a(()=>[n(t.$slots,"main-nav-before")]),"main-nav-after":a(()=>[n(t.$slots,"main-nav-after")]),comment:a(()=>[n(t.$slots,"comment")]),footer:a(()=>[n(t.$slots,"footer")]),aside:a(()=>[n(t.$slots,"aside")]),"aside-custom":a(()=>[n(t.$slots,"aside-custom")]),default:a(()=>[n(t.$slots,"default")]),_:3},8,["frontmatter"])}}};export{li as default};
