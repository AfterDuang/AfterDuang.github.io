import{_ as m}from"./ValaxyMain.vue_vue_type_style_index_0_lang-9HTySS_m.js";import{a as p,p as c,g as h,o as g,c as P,w as e,f,q as D,h as a,j as t,i as n,r as i}from"./app-DEw9raa7.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-CYufLakv.js";import"./YunCard.vue_vue_type_script_setup_true_lang-BabP9Q9Y.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-B8z3l9zt.js";import"./index-C7yU5XnD.js";const H="/images/PDGLinkUnity/HDAs.png",G="/images/PDGLinkUnity/Processor1.png",b="/images/PDGLinkUnity/Processor2.png",k="/images/PDGLinkUnity/Processor3.png",y="/images/PDGLinkUnity/TOPSet.png",U="/images/PDGLinkUnity/HDASet.png",T="/images/PDGLinkUnity/TOPNet.png",A="/images/PDGLinkUnity/Preview1.png",E="/images/PDGLinkUnity/TerrainSize.png",N=n("h3",{id:"houdini-pdg",tabindex:"-1"},[n("b",null,"Houdini PDG"),t(),n("a",{class:"header-anchor",href:"#houdini-pdg","aria-label":'Permalink to "<b>Houdini PDG</b>"'},"​")],-1),O=n("blockquote",null,[n("p",null,[n("a",{href:"https://www.bilibili.com/video/BV1fb411E7No",target:"_blank",rel:"noreferrer"},"参考教程"),n("a",{href:"https://zhuanlan.zhihu.com/p/68868983",target:"_blank",rel:"noreferrer"},"图文解析")])],-1),v=n("p",null,"Houdini PDG 是在17.5版本中增加的一个流程管理模块，可以用此工具方便的进行分布 生成。在TOP网格中PDG可以直观的描述这些依赖关系，甚至可以分发到其他计算机同时 执行。能更灵活的自动化生产过程。",-1),w=n("blockquote",null,[n("p",null,[t("在"),n("a",{href:"https://www.sidefx.com/learn/pipeline-pdg/",target:"_blank",rel:"noreferrer"},"这里"),t("可以看到更多的关于PDG的教程资料")])],-1),$=n("h4",{id:"houdini-pdg-应用在游戏生产中",tabindex:"-1"},[n("b",null,"Houdini PDG 应用在游戏生产中"),t(),n("a",{class:"header-anchor",href:"#houdini-pdg-应用在游戏生产中","aria-label":'Permalink to "<b>Houdini PDG 应用在游戏生产中</b>"'},"​")],-1),L=n("hr",null,null,-1),V=n("p",null,"在Unite 2019大会上，SideFx已经演示过了PDG在Houdini Engine上的应用。在我的理 解中其实就是把一个大的HDA分成数个小HDA,再进入PDG中进行过程管理，形成一条生产 链，可以方便的在中间修改数据，并生成最后的结果。",-1),S=n("p",null,[t("在官方的"),n("a",{href:"https://www.sidefx.com/docs/unity/_environment.html",target:"_blank",rel:"noreferrer"},"文档"),t("中可以看到，在Unity中使用Houdini ENgine 是要对插件环境进行配置的。 环境路径的设置必须以"),n("code",null,"HEU_ENVPATH"),t("前缀开头。")],-1),B=n("p",null,"示例:",-1),I=n("pre",null,`HEU_ENVPATH_MYPATH
`,-1),M=n("p",null,"故在Unity中导入HoudiniEngine后在Assets目录下创建unity_houdini.env文件 文件内写入以下路径，并在Engine设置中刷新工作目录。",-1),z=n("pre",null,`HEU_ENVPATH_JOB = E:/HoudiniManager/PDG_GAMEING_TEST
`,-1),R=n("p",null,"其中 路径内容是我要让PDG工作的目录，Houdini文件中的PDG Network下，也要进行配置",-1),F=n("b",null,"配置完成之后，就可以打开Houdini,开始制作初步的地形啦",-1),q=n("hr",null,null,-1),C=n("p",null,"直接拿那会跟着教程做的HDA来说，现在已经有了三个制作地形需要使用的基本HDA文件",-1),J=n("figure",null,[n("img",{src:H,alt:"",loading:"lazy",decoding:"async"})],-1),Y=n("p",null,[t("这三个HDA代表了以下三个步骤。 "),n("img",{src:G,alt:""}),n("br"),n("img",{src:b,alt:""}),n("img",{src:k,alt:""})],-1),j=n("p",null,[t("在Houdini中，为了方便使用在unity_houdini.env中设置的环境变量，按"),n("kbd",null,"Alt"),t("+"),n("kbd",null,"Shift"),t("+"),n("kbd",null,"V"),t(" 打开环境变量设置，在Variables中,TextPort 分别写入HEU_ENVPATH_JOB、E:/HoudiniManager/PDG_GAMEING_TEST 这样我们就可以方便的直接引用此变量。")],-1),x=n("p",null,[t("之后我们先创建TOP网格和一个空对象，将他们一起"),n("kbd",null,"Shift"),t("+"),n("kbd",null,"C"),t("一下。 并右键创建资源(HDA)。")],-1),W=n("p",null,[n("img",{src:y,alt:""}),n("img",{src:U,alt:""})],-1),K=n("p",null,[t("在TOP网格中的 localscheduler默认的Working Directory 中填入之前设置好的"),n("code",null,"HEU_ENVPATH_JOB"),t(" 之后创建HDA Proccessor 节点并导入好之前的三个HDA，并按处理顺序连接好。这就是 一个基本的处理HDA流程的TOP网格。")],-1),Q=n("figure",null,[n("img",{src:T,alt:"",loading:"lazy",decoding:"async"})],-1),X=n("p",null,"回到Object层级 右键Save Node Type保存(可以把HDA Proccessor中的参数绑到这个TOP的HDA上) 可以实时的在Unity中调整参数重新烘焙结果，这里之前为了方便没这么做。",-1),Z=n("p",null,[n("b",null,"回到Unity"),t(" 拖入刚刚在houdini中用TOP网格创建的HDA，再拖进场景。选中对象，点击菜单栏上的HoudiniEngine→PDG→Great PDG Link 可以发现，PDG模块中识别到了这个资源中的TOP网格和网格中的节点，在TOP Node中选择 最后一项ERODE,勾上AutoLoad Results(最后读取Output是这个结果，全勾上就会显示三个) 开始CookNode。烘焙完成后Unity层级中将新建出来一个OUTPUTS的对象，显示结果如下。")],-1),nn=n("figure",null,[n("img",{src:A,alt:"",loading:"lazy",decoding:"async"})],-1),tn=n("blockquote",null,[n("p",null,[n("b",null,"另外值得一提的是"),t(" 在设置地形的时候，大小必须是2的n次幂加一，不然会出现地形无法读取的情况")])],-1),en=n("figure",null,[n("img",{src:E,alt:"",loading:"lazy",decoding:"async"})],-1),mn={__name:"PDGLInkUnity",setup(on,{expose:u}){const l=JSON.parse('{"title":"PDG FORM UNITY记录","description":"","frontmatter":{"title":"PDG FORM UNITY记录","date":"2021-5-26","tags":["Houdini","Unity","PDG"],"categories":["Games"]},"headers":[{"level":3,"title":"Houdini PDG","slug":"houdini-pdg","link":"#houdini-pdg","children":[]}],"relativePath":"pages/posts/Houdini/PDGLInkUnity.md","path":"/home/runner/work/AfterDuang.github.io/AfterDuang.github.io/pages/posts/Houdini/PDGLInkUnity.md","lastUpdated":1713964229000}'),d=p(),r=l.frontmatter||{};return d.meta.frontmatter=Object.assign(d.meta.frontmatter||{},l.frontmatter||{}),c("pageData",l),c("valaxy:frontmatter",r),globalThis.$frontmatter=r,u({frontmatter:{title:"PDG FORM UNITY记录",date:"2021-5-26",tags:["Houdini","Unity","PDG"],categories:["Games"]}}),(o,an)=>{const s=h("font"),_=m;return g(),P(_,{frontmatter:f(r)},{"main-content-md":e(()=>[N,O,v,w,D(" more "),$,L,V,S,B,I,M,z,R,a(s,{color:"#B55578"},{default:e(()=>[F]),_:1}),q,C,J,Y,j,x,W,K,a(s,{color:"#B55578"},{default:e(()=>[t("设置如下")]),_:1}),Q,a(s,{color:"#FF0000"},{default:e(()=>[t("注意设置每个HDA的输入输出````$PDG_DIR````是当前PDG工作目录,也就是````$HEU_ENVPATH_JOB```` ")]),_:1}),X,Z,nn,tn,en,n("blockquote",null,[a(s,{color:"#B55578"},{default:e(()=>[t("另外在这边补充一个教程[页面](https://www.sidefx.com/learn/collections/pdg-for-indie-gamedev/)")]),_:1})])]),"main-header":e(()=>[i(o.$slots,"main-header")]),"main-header-after":e(()=>[i(o.$slots,"main-header-after")]),"main-nav":e(()=>[i(o.$slots,"main-nav")]),"main-content":e(()=>[i(o.$slots,"main-content")]),"main-content-after":e(()=>[i(o.$slots,"main-content-after")]),"main-nav-before":e(()=>[i(o.$slots,"main-nav-before")]),"main-nav-after":e(()=>[i(o.$slots,"main-nav-after")]),comment:e(()=>[i(o.$slots,"comment")]),footer:e(()=>[i(o.$slots,"footer")]),aside:e(()=>[i(o.$slots,"aside")]),"aside-custom":e(()=>[i(o.$slots,"aside-custom")]),default:e(()=>[i(o.$slots,"default")]),_:3},8,["frontmatter"])}}};export{mn as default};
